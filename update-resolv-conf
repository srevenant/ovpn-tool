#!/usr/bin/perl
#
# Note: ideally NetworkManager would handle this via dnsmasq, but it doesn't
# appear to handle this dynamically as of yet.  So we'll just clobber it.
# We run the risk that NeworkManager will replace it later..
#
# Parses DHCP options from openvpn to update resolv.conf
# To use set as 'up' and 'down' script in your openvpn *.conf:
#
# up /etc/openvpn/update-resolv-conf
# down /etc/openvpn/update-resolv-conf

use POSIX q{strftime};
use strict;

my $script_type = $ENV{'script_type'};
my $dev = $ENV{'dev'};
my $resconf = "/etc/resolv.conf";

sub log {
    print strftime("%a %b %d %H:%M:%S %Y ", localtime()), @_, "\n";
}

if ($script_type eq "up") {
    my @servers = ();
    my @search = ();
	for my $key (sort keys %ENV) {
        if ($key !~ /^foreign_option_/) {
            next;
        }
        my ($type, $name, $value) = split(/\s+/, $ENV{$key});
        if ($type ne "dhcp-option") {
            next;
        }
        if ($name eq "DNS") {
            push(@servers, $value);
        } elsif ($name eq "DOMAIN") {
            @search = ($value, grep(/^$value$/, @search));
        } elsif ($name eq "DOMAIN-SEARCH") {
            if (!grep(/^$value$/, @search)) {
                push(@search, $value);
            }
        }
    }

    rename($resconf, "$resconf.pre:$dev");
    open(OUT, ">", $resconf) || die("Unable to open ($resconf): $!");
    my $srch = join(" ", @search);
    &log("dns search $srch");
    print OUT <<END;
# generated by /etc/openvpn/update-resolv-conf
search $srch
END
    for my $svr (@servers) {
        &log("dns nameserver $svr");
        print OUT "nameserver $svr\n";
	}
    close(OUT);
} elsif ($script_type eq "down") {
    if (-f "$resconf.pre:$dev") {
        rename("$resconf.pre:$dev", $resconf);
    }
}
chmod(0644, $resconf);

